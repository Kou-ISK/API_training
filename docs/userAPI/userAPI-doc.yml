OpenAPI: 3.1.0
swagger: "2.0"
info:
  title: ユーザー管理API
  description: ユーザーを管理する
  version: "1.0.0"
serves:
  - url: http://loaclhost8080
    description: ローカルで実行
paths:
  user/{id}:
    get:
      operationId: findUserById
      summary: パスパラメータで指定したIDに紐づくユーザーを表示
      parameters:
        - schema:
          type: string
          name: id
          in: path
          required: true
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: 山田
                  email: yamadayamada@yamada.com
  user:
    get:
      operationId: findAllUser
      summary: 全ユーザー表示
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: object
                example:
                  users:
                    - user:
                        id: 1
                        name: 山田
                        email: yamadayamada@yamada.com
                    - user:
                        id: 2
                        name: 田中
                        email: tanakatanaka@tanaka.com
  delete_user/{id}:
    delete:
      operationId: deleteUserById
      summary: パスパラメータで指定したIDに紐づくユーザーを削除
      parameters:
        - schema:
          type: string
          name: id
          in: path
          required: true
      responses:
        '200':
          description: ok
  update_user/{id}:
    put:
      operationId: update_user/{id}
      summary: パスパラメータで指定したIDに紐づくユーザーを更新
      parameters:
        - schema:
            type: string
            name: id
            in: path
            required: true

components:
  schemas:
    user:
      type: object
      description: ユーザー
      properties:
        id:
          description: ID
          type: integer
          example: 1
        name:
          description: 名前
          type: string
          example: 山田
        email:
          description: メールアドレス
          type: string
          example: yamadayamada@yamada.com
responses:
  user:
    example:
    description: /userのレスポンス
    content:
      application/json:
